@model SYP.Models.Kullanici

@{
    ViewBag.Title = "Kayit";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>Kullanıcı Kayıt</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Isim, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Isim, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Isim, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Soyisim, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Soyisim, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Soyisim, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Eposta, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Eposta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Eposta, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Sifre, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Sifre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.SifreConfirm, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SifreConfirm, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SifreConfirm, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Kayıt Ol" class="btn btn-success" />
            </div>
        </div>
    </div>
}


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
